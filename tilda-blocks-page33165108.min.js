window.isMobile = !1; if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { window.isMobile = !0 }
window.isiOS = !1; if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) { window.isiOS = !0 }
window.isiOSVersion = ''; if (window.isiOS) { var version = (navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/); if (version !== null) { window.isiOSVersion = [parseInt(version[1], 10), parseInt(version[2], 10), parseInt(version[3] || 0, 10)] } }
function t_throttle(fn, threshhold, scope) { var last; var deferTimer; threshhold || (threshhold = 250); return function () { var context = scope || this; var now = +new Date(); var args = arguments; if (last && now < last + threshhold) { clearTimeout(deferTimer); deferTimer = setTimeout(function () { last = now; fn.apply(context, args) }, threshhold) } else { last = now; fn.apply(context, args) } } }
function t450_showMenu(recid) {
    var rec = document.getElementById('rec' + recid); if (!rec) return; var menu = rec.querySelector('.t450'); var overlay = rec.querySelector('.t450__overlay'); var menuElements = rec.querySelectorAll('.t450__overlay, .t450__close, a[href*="#"]'); if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupShowed'); document.body.classList.add('t450__body_menushowed'); if (menu) menu.classList.add('t450__menu_show'); if (overlay) overlay.classList.add('t450__menu_show'); if (menu) { menu.addEventListener('clickedAnchorInTooltipMenu', function () { t450_closeMenu(menu, overlay) }) }
    Array.prototype.forEach.call(menuElements, function (element) { element.addEventListener('click', function () { if (element.closest('.tooltipstered, .t-menusub__target-link, .t794__tm-link, .t966__tm-link, .t978__tm-link')) return; if (element.href && (element.href.substring(0, 7) === '#price:' || element.href.substring(0, 9) === '#submenu:')) return; t450_closeMenu(menu, overlay) }) }); document.addEventListener('keydown', function (e) { if (e.keyCode === 27) { document.body.classList.remove('t390__body_popupshowed'); var popups = document.querySelectorAll('.t390'); Array.prototype.forEach.call(popups, function (popup) { popup.classList.remove('t390__popup_show') }) } }); rec.addEventListener('click', function (e) { if (e.target.closest('.t966__tm-link, .t978__tm-link')) { t450_checkSize(recid); if (e.target.closest('.t978__tm-link')) { setTimeout(function () { var hookLink = e.target.closest('.t978__tm-link'); var menuBlock = hookLink.nextElementSibling; var submenuLinks = menuBlock ? menuBlock.querySelectorAll('.t978__menu-link') : []; Array.prototype.forEach.call(submenuLinks, function (link) { link.addEventListener('click', function () { t450_checkSize(recid) }) }) }, 300) } } }); menu.addEventListener('menuOverflow', function () { t450_checkSize(recid) }); t450_highlight(recid)
}
function t450_closeMenu(menu, overlay) { if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupHidden'); document.body.classList.remove('t450__body_menushowed'); if (menu) menu.classList.remove('t450__menu_show'); if (overlay) overlay.classList.remove('t450__menu_show') }
function t450_checkSize(recid) { var rec = document.getElementById('rec' + recid); var menu = rec ? rec.querySelector('.t450') : null; if (!menu) return; var container = menu.querySelector('.t450__container'); var topContainer = menu.querySelector('.t450__top'); var rightContainer = menu.querySelector('.t450__rightside'); setTimeout(function () { var topContainerHeight = topContainer ? topContainer.offsetHeight : 0; var rightContainerHeight = rightContainer ? rightContainer.offsetHeight : 0; var containerPaddingTop = container ? window.getComputedStyle(container).paddingTop : '0'; var containerPaddingBottom = container ? window.getComputedStyle(container).paddingBottom : '0'; containerPaddingTop = parseInt(containerPaddingTop, 10); containerPaddingBottom = parseInt(containerPaddingBottom, 10); if (topContainerHeight + rightContainerHeight + containerPaddingTop + containerPaddingBottom > document.documentElement.clientHeight) { menu.classList.add('t450__overflowed') } else { menu.classList.remove('t450__overflowed') } }) }
function t450_appearMenu(recid) {
    var rec = document.getElementById('rec' + recid); var burger = rec ? rec.querySelector('.t450__menu__content') : null; if (!burger) return; var burgerAppearOffset = burger ? burger.getAttribute('data-appearoffset') : ''; var burgerHideOffset = burger ? burger.getAttribute('data-hideoffset') : ''; if (burgerAppearOffset) { burgerAppearOffset = t450_appearMenuParseNumber(burgerAppearOffset); if (window.pageYOffset >= burgerAppearOffset) { if (burger.classList.contains('t450__beforeready')) { burger.classList.remove('t450__beforeready') } } else { burger.classList.add('t450__beforeready') } }
    if (burgerHideOffset) { burgerHideOffset = t450_appearMenuParseNumber(burgerHideOffset); var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight); if (window.pageYOffset + window.innerHeight >= scrollHeight - burgerHideOffset) { if (!burger.classList.contains('t450__beforeready')) { burger.classList.add('t450__beforeready') } } else if (burgerAppearOffset) { if (window.pageYOffset >= burgerAppearOffset) { burger.classList.remove('t450__beforeready') } } else { burger.classList.remove('t450__beforeready') } }
}
function t450_appearMenuParseNumber(string) {
    if (string.indexOf('vh') > -1) { string = Math.floor((window.innerHeight * (parseInt(string) / 100))) }
    return parseInt(string, 10)
}
function t450_initMenu(recid) {
    var rec = document.getElementById('rec' + recid); var menu = rec ? rec.querySelector('.t450') : null; var overlay = rec ? rec.querySelector('.t450__overlay') : null; var burger = rec ? rec.querySelector('.t450__burger_container') : null; var menuLinks = rec ? rec.querySelectorAll('.t-menu__link-item.t450__link-item_submenu') : []; var hook = menu ? menu.getAttribute('data-tooltip-hook') : ''; if (hook) { document.addEventListener('click', function (e) { if (e.target.closest('a[href="' + hook + '"]')) { e.preventDefault(); t450_closeMenu(menu, overlay); t450_showMenu(recid); t450_checkSize(recid) } }) }
    if (burger) { burger.addEventListener('click', function () { t450_closeMenu(menu, overlay); t450_showMenu(recid); t450_checkSize(recid) }) }
    window.addEventListener('resize', function () { t450_checkSize(recid) }); if (!window.isMobile) return; Array.prototype.forEach.call(menuLinks, function (link) { link.addEventListener('click', function () { t450_checkSize(recid) }) })
}
function t450_highlight(recid) {
    var url = window.location.href; var pathname = window.location.pathname; var hash = window.location.hash; if (url.substr(url.length - 1) === '/') { url = url.slice(0, -1) }
    if (pathname.substr(pathname.length - 1) === '/') { pathname = pathname.slice(0, -1) }
    if (pathname.charAt(0) === '/') { pathname = pathname.slice(1) }
    if (pathname === '') { pathname = '/' }
    var shouldBeActiveElements = document.querySelectorAll('.t450__menu a[href=\'' + url + '\'], ' + '.t450__menu a[href=\'' + url + '/\'], ' + '.t450__menu a[href=\'' + pathname + '\'], ' + '.t450__menu a[href=\'/' + pathname + '\'], ' + '.t450__menu a[href=\'' + pathname + '/\'], ' + '.t450__menu a[href=\'/' + pathname + '/\']' + (hash ? ', .t450__menu a[href=\'' + hash + '\']' : '')); var rec = document.getElementById('rec' + recid); var menuLinks = rec ? rec.querySelectorAll('.t450__menu a') : []; Array.prototype.forEach.call(menuLinks, function (link) { if (link.getAttribute('data-highlighted-by-user') !== 'y') link.classList.remove('t-active') }); Array.prototype.forEach.call(shouldBeActiveElements, function (link) { link.classList.add('t-active') })
}
function t670_init(recid) { t670_imageHeight(recid); t670_show(recid); t670_hide(recid) }
function t670_show(recid) {
    var rec = document.getElementById('rec' + recid); if (!rec) return; var playBtns = rec.querySelectorAll('.t670__play'); Array.prototype.forEach.call(playBtns, function (play) {
        play.addEventListener('click', function () {
            var videoType = play.getAttribute('data-slider-video-type'); var url; var nextEl; var prevEl; var iframe; var video; var source; switch (videoType) {
                case 'youtube': url = play.getAttribute('data-slider-video-url'); nextEl = play.nextElementSibling; prevEl = play.previousElementSibling.previousElementSibling; if (nextEl) { iframe = document.createElement('iframe'); iframe.classList.add('t670__iframe'); iframe.width = '100%'; iframe.height = '100%'; iframe.src = 'https://www.youtube.com/embed/' + url + '?autoplay=1&enablejsapi=1'; iframe.frameBorder = '0'; iframe.setAttribute('webkitallowfullscreen', ''); iframe.setAttribute('mozallowfullscreen', ''); iframe.setAttribute('allowfullscreen', ''); iframe.setAttribute('allow', 'autoplay'); nextEl.innerHTML = ''; nextEl.insertAdjacentElement('beforeend', iframe) }
                    if (prevEl && prevEl.classList.contains('t-bgimg')) prevEl.style.opacity = '0'; break; case 'vimeo': url = play.getAttribute('data-slider-video-url'); nextEl = play.nextElementSibling; prevEl = play.previousElementSibling.previousElementSibling; var idMatch = /vimeo[^/]*\/(\d+)\/?(\w*)\/?/i.exec(url); var id = idMatch ? idMatch[1] : null; var hash = idMatch ? '?h=' + idMatch[2] : null; if (nextEl) { iframe = document.createElement('iframe'); iframe.classList.add('t670__iframe'); iframe.width = '100%'; iframe.height = '100%'; iframe.src = 'https://player.vimeo.com/video/' + id + hash + '&amp;api=1'; iframe.frameBorder = '0'; iframe.setAttribute('allowfullscreen', ''); iframe.setAttribute('allow', 'autoplay; fullscreen'); nextEl.innerHTML = ''; nextEl.insertAdjacentElement('beforeend', iframe) }
                    if (prevEl && prevEl.classList.contains('t-bgimg')) prevEl.style.opacity = '0'; break; case 'mp4': url = play.getAttribute('data-slider-video-url'); nextEl = play.nextElementSibling; prevEl = play.previousElementSibling.previousElementSibling; if (nextEl) { video = document.createElement('video'); source = document.createElement('source'); video.insertAdjacentElement('beforeend', source); video.classList.add('t670__video'); video.controls = !0; source.src = url; nextEl.innerHTML = ''; nextEl.insertAdjacentElement('beforeend', video); video = nextEl.querySelector('video'); if (video) video.play() }
                    if (prevEl && prevEl.classList.contains('t-bgimg')) prevEl.style.opacity = '0'; break
            }
            if (nextEl) nextEl.style.zIndex = '3'
        })
    })
}
function t670_hide(recid) { var rec = document.getElementById('rec' + recid); if (!rec) return; var elBody = rec.querySelector('.t670__frame'); rec.addEventListener('updateSlider', function () { if (elBody) elBody.innerHTML = ''; if (elBody) elBody.style.zIndex = '' }) }
function t670_imageHeight(recid) { var rec = document.getElementById('rec' + recid); if (!rec) return; var images = rec.querySelectorAll('.t670__separator'); Array.prototype.forEach.call(images, function (img) { var width = img.getAttribute('data-slider-image-width') || 0; var height = img.getAttribute('data-slider-image-height') || 0; var ratio = height / width; var padding = ratio * 100; img.style.paddingBottom = padding + '%' }) }
function t395_init(recid) {
    var rec = document.getElementById('rec' + recid); if (!rec) return; var allRecords = document.getElementById('allrecords'); var tildaMode = allRecords ? allRecords.getAttribute('data-tilda-mode') : ''; var tildaLazyMode = allRecords ? allRecords.getAttribute('data-tilda-lazy') : ''; var tabs = rec ? rec.querySelectorAll('.t395__tab') : []; if (tildaMode !== 'edit' && tildaMode !== 'preview') {
        setTimeout(function () {
            t395_scrollToTabs(recid); var activeTab = rec.querySelector('.t395__tab_active'); if (activeTab) {
                var currentButton = activeTab.querySelector('.t395__title'); if (currentButton) { currentButton.setAttribute('tabindex', 0); currentButton.setAttribute('aria-selected', !0) }
                var currentTabIndex = activeTab.getAttribute('data-tab-number'); var wrapper = rec.querySelector('.t395__wrapper'); wrapper.setAttribute('data-tab-current', currentTabIndex)
            }
        }, 300)
    }
    t395_addAttributesToBlocksInsideTabs(recid, tabs); Array.prototype.forEach.call(tabs, function (tab, i) {
        tab.addEventListener('click', function (event) { var tabNumber = i + 1; var targetTab = event.target.closest('.t395__tab'); if (targetTab && targetTab.classList.contains('t395__tab_active') && !event.isTrusted) return; t395_switchBetweenTabs(recid, tabNumber, targetTab, tildaMode, tildaLazyMode) }); tab.addEventListener('keydown', function (event) {
            var currentIndex = Number(rec.querySelector('.t395__wrapper').getAttribute('data-tab-current')); var targetTab = event.target.closest('.t395__tab'); if (targetTab && targetTab.classList.contains('t395__tab_active') && !event.isTrusted) return; var prevent = !1; switch (event.key) { case 'Left': case 'ArrowLeft': currentIndex = currentIndex === 1 ? tabs.length : currentIndex - 1; targetTab = rec.querySelector('[data-tab-number="' + currentIndex + '"]'); t395_switchBetweenTabs(recid, currentIndex, targetTab, tildaMode, tildaLazyMode); t395_showActiveTabFromKeyboard(recid, currentIndex, tabs); prevent = !0; break; case 'Right': case 'ArrowRight': currentIndex = currentIndex === tabs.length ? 1 : currentIndex + 1; targetTab = rec.querySelector('[data-tab-number="' + currentIndex + '"]'); t395_switchBetweenTabs(recid, currentIndex, targetTab, tildaMode, tildaLazyMode); t395_showActiveTabFromKeyboard(recid, currentIndex, tabs); prevent = !0; break; default: break }
            if (prevent) { event.stopPropagation(); event.preventDefault() }
        })
    }); if (tabs.length) { t395_alltabs_updateContent(recid); t395_updateContentBySelect(recid); var bgColor = rec ? rec.style.backgroundColor : '#ffffff'; var bgColorTargets = rec.querySelectorAll('.t395__select, .t395__firefoxfix'); Array.prototype.forEach.call(bgColorTargets, function (target) { target.style.background = bgColor }) }
}
function t395_addAttributesToBlocksInsideTabs(recid, tabs) {
    if (tabs.length > 0) {
        Array.prototype.forEach.call(tabs, function (tab, i) {
            var firstBlockInsideTabId = tab.getAttribute('data-tab-rec-ids').split(',')[0]; var firstBlockInsideTab = document.querySelector('#rec' + firstBlockInsideTabId); if (firstBlockInsideTab && !firstBlockInsideTab.getAttribute('aria-labelledby')) { firstBlockInsideTab.setAttribute('aria-labelledby', 'tab' + (i + 1) + '_' + recid) }
            if (firstBlockInsideTab && !firstBlockInsideTab.getAttribute('role')) { firstBlockInsideTab.setAttribute('role', 'tabpanel') }
            if (firstBlockInsideTab && !firstBlockInsideTab.getAttribute('tabindex')) { firstBlockInsideTab.setAttribute('tabindex', '0') }
        })
    }
}
function t395_switchBetweenTabs(recid, tabNumber, targetTab, tildaMode, tildaLazyMode) {
    var rec = document.getElementById('rec' + recid); if (!rec) return; var activeTab = rec.querySelector('.t395__tab_active'); if (activeTab) { activeTab.classList.remove('t395__tab_active'); var activeButton = activeTab.querySelector('.t395__title'); if (activeButton) { activeButton.setAttribute('tabindex', -1); activeButton.setAttribute('aria-selected', !1) } }
    targetTab.classList.add('t395__tab_active'); var targetButton = targetTab.querySelector('.t395__title'); if (targetButton) { targetButton.setAttribute('tabindex', 0); targetButton.setAttribute('aria-selected', !0) }
    t395_removeUrl(); if (tildaMode !== 'edit' && tildaMode !== 'preview' && tabNumber && typeof history.replaceState !== 'undefined') { try { window.history.replaceState('', '', window.location.href + '#!/tab/' + recid + '-' + tabNumber) } catch (err) { } }
    rec.querySelector('.t395__wrapper').setAttribute('data-tab-current', tabNumber); t395_alltabs_updateContent(recid); t395_updateSelect(recid); var hookBlocks = targetTab.getAttribute('data-tab-rec-ids').split(','); var event = document.createEvent('Event'); event.initEvent('displayChanged', !0, !0); var hooksCopy = hookBlocks.slice(); hooksCopy.forEach(function (recid) { var currentRec = document.getElementById('rec' + recid); if (!currentRec) return; var recordType = currentRec.getAttribute('data-record-type'); if (recordType === '395' || recordType === '397') { var selector = '.t' + recordType + '__tab_active'; var activeIDs = currentRec.querySelector(selector).getAttribute('data-tab-rec-ids'); activeIDs = activeIDs.split(','); hookBlocks = hookBlocks.concat(activeIDs) } }); hookBlocks.forEach(function (curRecid) { var currentRec = document.getElementById('rec' + curRecid); if (!currentRec) return; var currentRecChildren = currentRec.querySelectorAll('.t-feed, .t-store, .t-store__product-snippet, .t117, .t121, .t132, .t223, .t226, .t228, .t229, .t230, .t268, .t279, .t341, .t346, .t347, .t349, .t351, .t353, .t384, .t385, .t386, .t396, .t400, .t404, .t409, .t410, .t412, .t418, .t422, .t425, .t428, .t433, .t448, .t456, .t477, .t478, .t480, .t486, .t498, .t504, .t506, .t509, .t511, .t517, .t518, .t519, .t520, .t532, .t533, .t538, .t539, .t544, .t545, .t552, .t554, .t569, .t570, .t577, .t592, .t598, .t599, .t601, .t604, .t605, .t609, .t615, .t616, .t650, .t659, .t670, .t675, .t686, .t688, .t694, .t698, .t700, .t726, .t728, .t730, .t734, .t738, .t740, .t744, .t754, .t760, .t762, .t764, .t774, .t776, .t778, .t780, .t786, .t798, .t799, .t801, .t813, .t814, .t822, .t826, .t827, .t829, .t842, .t843, .t849, .t850, .t851, .t856, .t858, .t859, .t860, .t881, .t889, .t902, .t912, .t923, .t937, .t958, .t959, .t979, .t982, .t983, .t989, .t994, .t1053, .t1067, .t1068, .t1069, .t1070, .t1071, .t1072'); Array.prototype.forEach.call(currentRecChildren, function (child) { child.dispatchEvent(event) }); var displayChangedBlock = currentRec.querySelector('[data-display-changed="true"]'); if (displayChangedBlock) displayChangedBlock.dispatchEvent(event) }); var galaxyEffectBlocks = document.querySelectorAll('.t826'); Array.prototype.forEach.call(galaxyEffectBlocks, function (galaxyEffectBlock) { galaxyEffectBlock.dispatchEvent(event) }); if (window.lazy === 'y' || tildaLazyMode === 'yes') { t_onFuncLoad('t_lazyload_update', function () { t_lazyload_update() }) }
}
function t395_showActiveTabFromKeyboard(recid, currentIndex, tabs) {
    var rec = document.querySelector('#rec' + recid); var currentTab = rec.querySelector('[data-tab-number="' + currentIndex + '"]'); if (!currentTab) return; var currentButton = currentTab.querySelector('.t395__title'); if (currentButton) { currentButton.focus() }
    var tabList = rec.querySelector('.t395__wrapper'); if (tabList) tabList.setAttribute('data-tab-current', currentIndex)
}
function t395_alltabs_updateContent(recid) {
    var rec = document.getElementById('rec' + recid); var activeTabs = rec ? rec.querySelectorAll('.t395__tab_active') : null; var select = rec ? rec.querySelector('.t395__select') : null; var tabs = rec.querySelectorAll('.t395__tab'); if (activeTabs.length !== 1) return !1; var activeTab = activeTabs[0]; var hookBlocks = activeTab.getAttribute('data-tab-rec-ids').split(','); var noActive = []; var popupBlocks = [190, 217, 312, 331, 358, 364, 365, 390, 702, 706, 746, 750, 756, 768, 862, 868, 890, 945, 1013, 1014]; Array.prototype.forEach.call(tabs, function (tab) { if (tab !== activeTab) { var noActiveHooks = tab.getAttribute('data-tab-rec-ids').split(','); noActiveHooks.forEach(function (hook) { if (noActive.indexOf(hook) === -1 && hookBlocks.indexOf(hook) === -1) noActive.push(hook) }) } }); if (t395_checkVisibillityEl(activeTab) || t395_checkVisibillityEl(select)) {
        hookBlocks.forEach(function (hook) {
            if (hook) {
                var hookEl = document.getElementById('rec' + hook); var hookElRecordType = hookEl ? hookEl.getAttribute('data-record-type') : ''; if (hookEl) { hookEl.classList.remove('t395__off'); hookEl.classList.remove('t397__off'); hookEl.setAttribute('aria-hidden', !1); hookEl.style.opacity = '' }
                t395_updateTabsByHook(hookElRecordType, hookEl, hook, recid)
            }
        })
    } else {
        hookBlocks.forEach(function (hook) {
            var hookEl = document.getElementById('rec' + hook); var hookElRecordType = hookEl ? hookEl.getAttribute('data-record-type') : ''; var isPopupBlock = popupBlocks.some(function (id) { return hookElRecordType == id }); if (hookEl && !isPopupBlock) { hookEl.setAttribute('data-animationappear', 'off'); hookEl.classList.add('t395__off'); hookEl.setAttribute('aria-hidden', !0) }
            t395_updateTabsByHook(hookElRecordType, hookEl, hook, recid)
        })
    }
    noActive.forEach(function (noActiveID) {
        if (!noActiveID) return; var hookEl = document.getElementById('rec' + noActiveID); var hookElRecordType = hookEl ? hookEl.getAttribute('data-record-type') : ''; var isPopupBlock = popupBlocks.some(function (id) { return hookElRecordType == id }); if (hookEl && !isPopupBlock) { hookEl.setAttribute('data-connect-with-tab', 'yes'); hookEl.setAttribute('data-animationappear', 'off'); hookEl.classList.add('t395__off'); hookEl.setAttribute('aria-hidden', !0) }
        t395_updateTabsByHook(hookElRecordType, hookEl, noActiveID, recid)
    }); var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight); if (scrollHeight - window.innerHeight < window.pageYOffset) { window.scrollTo(0, 0) }
}
function t395_updateTabsByHook(hookElRecordType, hookEl, currentID, recid) {
    var hookElTab; switch (hookElRecordType) {
        case '395': if (window.t395_alltabs_updateContent && window.t395_updateSelect && recid !== currentID) { window.t395_alltabs_updateContent(currentID); window.t395_updateSelect(currentID); hookElTab = hookEl ? hookEl.querySelector('.t395__tab') : null; if (hookElTab) hookElTab.click() }
            break; case '397': if (t397_alltabs_updateContent && t397_updateSelect && recid !== currentID) { t397_alltabs_updateContent(currentID); t397_updateSelect(currentID); hookElTab = hookEl ? hookEl.querySelector('.t397__tab') : null; if (hookElTab) hookElTab.click() }
            break
    }
}
function t395_checkVisibillityEl(el) { return !!(el && (el.offsetWidth || el.offsetHeight || el.getClientRects().length)) }
function t395_updateContentBySelect(recid) { var rec = document.getElementById('rec' + recid); if (!rec) return !1; var select = rec.querySelector('.t395__select'); if (select) { select.addEventListener('change', function () { var currentValue = select.value; var tabIndex = rec.querySelector('.t395__tab[data-tab-rec-ids=\'' + currentValue + '\']'); if (tabIndex) tabIndex.click() }) } }
function t395_updateSelect(recid) { var rec = document.getElementById('rec' + recid); if (!rec) return !1; var activeTab = rec.querySelector('.t395__tab_active'); var currentTabHooks = activeTab ? activeTab.getAttribute('data-tab-rec-ids') : ''; var select = rec.querySelector('.t395__select'); if (select) select.value = currentTabHooks }
function t395_scrollToTabs(recid) { var rec = document.getElementById('rec' + recid); var curUrl = window.location.href; var tabIndexNumber = curUrl.indexOf('#!/tab/'); if (tabIndexNumber === -1) return !1; var tabIndexNumberStart = curUrl.indexOf('tab/'); var firstOptionSelect = rec ? rec.querySelector('.t395__wrapper_mobile .t395__select option') : null; if (firstOptionSelect) firstOptionSelect.selected = !1; var tabRec = curUrl.substring(tabIndexNumberStart + 4, tabIndexNumberStart + 4 + recid.length); if (tabRec !== recid) return !1; var tabBlock = rec ? rec.querySelector('.t395') : null; var tabNumber = parseInt(curUrl.slice(tabIndexNumberStart + 4 + recid.length + 1), 10); var tabs = rec.querySelectorAll('.t395__tab'); Array.prototype.forEach.call(tabs, function (tab, i) { if (i === tabNumber - 1) { tab.click(); tab.classList.add('t395__tab_active') } else { tab.classList.remove('t395__tab_active') } }); var tabsMob = rec.querySelectorAll('.t395__wrapper_mobile .t395__select option'); var activeTabMob = tabsMob.length ? tabsMob[tabNumber - 1] : null; if (activeTabMob) activeTabMob.selected = !0; var targetOffset = tabBlock.getBoundingClientRect().top + window.pageYOffset; var target = window.innerWidth > 960 ? targetOffset - 200 : targetOffset - 100; if (target < 0) target = 0; t395_scrollToEl(target) }
function t395_scrollToEl(elTopPos) {
    if (elTopPos === window.pageYOffset) return !1; var duration = 300; var difference = window.pageYOffset; var cashedDiff = window.pageYOffset; var step = 10 * (elTopPos || window.pageYOffset) / duration; var timer = setInterval(function () {
        if (cashedDiff > elTopPos) { difference -= step } else { difference += step }
        window.scrollTo(0, difference); document.body.setAttribute('data-scrollable', 'true'); if (cashedDiff > elTopPos && window.pageYOffset <= elTopPos || cashedDiff <= elTopPos && window.pageYOffset >= elTopPos) { document.body.removeAttribute('data-scrollable'); clearInterval(timer) }
    }, 10); var timer2 = setTimeout(function () { clearInterval(timer); document.body.removeAttribute('data-scrollable'); clearTimeout(timer2) }, duration * 2)
}
function t395_removeUrl() {
    var curUrl = window.location.href; var indexToRemove = curUrl.indexOf('#!/tab/'); if (indexToRemove === -1) { indexToRemove = curUrl.indexOf('%23!/tab/') }
    curUrl = curUrl.substring(0, indexToRemove); if (indexToRemove !== -1) { if (typeof history.replaceState != 'undefined') { try { window.history.replaceState('', '', curUrl) } catch (err) { } } }
}
function t400_init(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t400'); if (!container) return; var button = rec.querySelector('.t400__submit'); var hideBackText = button.getAttribute('data-hide-back-text'); var showMoreText = button.textContent; button.addEventListener('click', function () {
        if (hideBackText && button.classList.contains('t400__submit_hide-back')) {
            t400_alltabs_updateContent(recId); button.classList.remove('t400__submit_hide-back'); if (button.classList.contains('t400__submit-overflowed')) { button.innerHTML = '<span class="t400__text">' + showMoreText + '</span>' } else { button.innerHTML = showMoreText }
            var zeroBlocks = document.querySelectorAll('.t396'); for (var i = 0; i < zeroBlocks.length; i++) { t400__triggerEvent(zeroBlocks[i], 'displayChanged') }
            return
        }
        var recIds = button.getAttribute('data-hidden-rec-ids').split(','); for (var i = 0; i < recIds.length; i++) {
            var recShowBlock = document.getElementById('rec' + recIds[i]); if (recShowBlock) {
                recShowBlock.classList.remove('t400__off'); recShowBlock.style.opacity = ''; var selectors = recShowBlock.querySelectorAll('.t-feed, .t-store, .t-store__product-snippet, .t117, .t121, .t132, .t223, .t226, .t228, .t229, .t230, .t268, .t279, .t341, .t346, .t347, .t349, .t351, .t353, .t384, .t385, .t386, .t396, .t400, .t404, .t409, .t410, .t412, .t418, .t422, .t425, .t428, .t433, .t456, .t477, .t478, .t480, .t486, .t498, .t504, .t506, .t509, .t511, .t517, .t518, .t519, .t520, .t527, .t531, .t532, .t533, .t538, .t539, .t544, .t545, .t552, .t554, .t570, .t577, .t592, .t598, .t599, .t601, .t604, .t605, .t609, .t615, .t616, .t650, .t659, .t670, .t675, .t686, .t688, .t694, .t698, .t700, .t726, .t728, .t730, .t734, .t738, .t740, .t744, .t754, .t760, .t762, .t764, .t774, .t776, .t778, .t780, .t786, .t798, .t799, .t801, .t813, .t814, .t822, .t826, .t827, .t829, .t842, .t843, .t849, .t850, .t851, .t856, .t858, .t859, .t860, .t881, .t889, .t899, .t902, .t905, .t912, .t923, .t937, .t958, .t959, .t979, .t982, .t983, .t989, .t994, .t1000, .t1003, .t1067, .t1068, .t1069, .t1070, .t1071, .t1072, .t1053'); for (var j = 0; j < selectors.length; j++) { t400__triggerEvent(selectors[j], 'displayChanged') }
                var displayChangedBlock = recShowBlock.querySelector('[data-display-changed="true"]'); if (displayChangedBlock) t400__triggerEvent(displayChangedBlock, 'displayChanged')
            }
        }
        if (hideBackText) { button.classList.add('t400__submit_hide-back'); if (button.classList.contains('t400__submit-overflowed')) { button.innerHTML = '<span class="t400__text">' + hideBackText + '</span>' } else { button.innerHTML = hideBackText } } else { rec.classList.add('t400__off'); rec.style.display = 'none' }
        if (window.lazy === 'y' || document.getElementById('allrecords').getAttribute('data-tilda-lazy') === 'yes') { t_onFuncLoad('t_lazyload_update', function () { t_lazyload_update() }) }
    }); t400_alltabs_updateContent(recId); t400_checkSize(recId); container.addEventListener('displayChanged', function () { t400_checkSize(recId) })
}
function t400_alltabs_updateContent(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var button = rec.querySelector('.t400__submit'); if (!button) return; var recIds = button.getAttribute('data-hidden-rec-ids').split(','); for (var i = 0; i < recIds.length; i++) { var recHideBlock = document.getElementById('rec' + recIds[i]); if (!recHideBlock) continue; recHideBlock.setAttribute('data-animationappear', 'off'); recHideBlock.setAttribute('data-connect-with-tab', 'yes'); recHideBlock.classList.add('t400__off') }
    rec.setAttribute('data-hiding-completed', 'yes')
}
function t400_checkSize(recId) { var rec = document.getElementById('rec' + recId); if (!rec) return; var button = rec.querySelector('.t400__submit'); if (!button) return; var buttonStyle = getComputedStyle(button, null); var buttonPaddingTop = parseInt(buttonStyle.paddingTop) || 0; var buttonPaddingBottom = parseInt(buttonStyle.paddingBottom) || 0; var buttonHeight = button.clientHeight - (buttonPaddingTop + buttonPaddingBottom); var buttonScrollHeight = button.scrollHeight; if (buttonHeight < buttonScrollHeight) { var buttonText = button.textContent; button.classList.add('t400__submit-overflowed'); button.innerHTML = '<span class="t400__text">' + buttonText + '</span>' } }
function t400__triggerEvent(el, eventName) {
    var event; if (typeof window.CustomEvent === 'function') { event = new CustomEvent(eventName) } else if (document.createEvent) { event = document.createEvent('HTMLEvents'); event.initEvent(eventName, !0, !1) } else if (document.createEventObject) { event = document.createEventObject(); event.eventType = eventName }
    event.eventName = eventName; if (el.dispatchEvent) { el.dispatchEvent(event) } else if (el.fireEvent) { el.fireEvent('on' + event.eventType, event) } else if (el[eventName]) { el[eventName]() } else if (el['on' + eventName]) { el['on' + eventName]() }
}
function t841_init(recId) { t_onFuncLoad('t_card__moveClickOnCard', function () { t_card__moveClickOnCard(recId) }); t_onFuncLoad('t_card__addFocusOnTab', function () { t_card__addFocusOnTab(recId) }) }
function t142_checkSize(recId) { var rec = document.getElementById('rec' + recId); if (!rec) return; var button = rec.querySelector('.t142__submit'); if (!button) return; var buttonStyle = getComputedStyle(button, null); var buttonPaddingTop = parseInt(buttonStyle.paddingTop) || 0; var buttonPaddingBottom = parseInt(buttonStyle.paddingBottom) || 0; var buttonHeight = button.clientHeight - (buttonPaddingTop + buttonPaddingBottom) + 5; var textHeight = button.scrollHeight; if (buttonHeight < textHeight) { button.classList.add('t142__submit-overflowed') } }
function t1067_init(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t1067'); if (!container) return; t_onFuncLoad('t_card__addFocusOnTab', function () { t_card__addFocusOnTab(recId) }); var rows = rec.querySelectorAll('.t1067__row'); Array.prototype.forEach.call(rows, function (row) {
        var descriptions = row.querySelectorAll('.t-card__descr'); var maxHeight = 0; for (var i = 0; i < descriptions.length; i++) { descriptions[i].style.height = '' }
        for (var i = 0; i < descriptions.length; i++) { var description = descriptions[i]; var descriptionStyle = getComputedStyle(description, null); var descriptionPaddingTop = parseInt(descriptionStyle.paddingTop) || 0; var descriptionPaddingBottom = parseInt(descriptionStyle.paddingBottom) || 0; var descriptionHeight = description.clientHeight - (descriptionPaddingTop + descriptionPaddingBottom); if (descriptionHeight > maxHeight) maxHeight = descriptionHeight }
        if (window.innerWidth >= 960) { for (var i = 0; i < descriptions.length; i++) { descriptions[i].style.height = maxHeight + 'px' } } else { for (var i = 0; i < descriptions.length; i++) { descriptions[i].style.height = '' } }
    })
}
function t480_init(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t480'); if (!container) return; var isJquery = typeof jQuery !== 'undefined'; t480_setHeight(recId); if (window.isMobile) { if (isJquery) { $(window).on('orientationchange', t_throttle(function () { setTimeout(function () { t480_setHeight(recId) }, 200) })) } else { window.addEventListener('orientationchange', t_throttle(function () { setTimeout(function () { t480_setHeight(recId) }, 200) })) } } else { window.addEventListener('resize', t_throttle(function () { if (window.noAdaptive && window.noAdaptive === !0 && window.isMobile) return; t480_setHeight(recId) })) }
    if (isJquery) { $(container).on('displayChanged', function () { t480_setHeight(recId) }) } else { container.addEventListener('displayChanged', function () { t480_setHeight(recId) }) }
}
function t480_setHeight(recId) { var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t480'); if (!container) return; var sizer = rec.querySelector('.t480__sizer'); var sizerStyle = getComputedStyle(sizer, null); var sizerPaddingTop = parseInt(sizerStyle.paddingTop); var sizerPaddingBottom = parseInt(sizerStyle.paddingBottom); var sizerPaddingLeft = parseInt(sizerStyle.paddingLeft); var sizerPaddingRight = parseInt(sizerStyle.paddingRight); var sizerHeight = sizer.clientHeight - (sizerPaddingTop + sizerPaddingBottom); var sizerWidth = sizer.clientWidth - (sizerPaddingLeft + sizerPaddingRight); var ratio = sizerWidth / sizerHeight; var imgWrapper = rec.querySelector('.t480__blockimg'); var imgWidth = imgWrapper.clientWidth; var sizerAttrStyle = sizer.getAttribute('style'); var windowHeight = window.innerHeight; if (window.isMobile && sizerAttrStyle && sizerAttrStyle.indexOf('vh') !== -1) { sizerHeight = document.documentElement.clientHeight * parseFloat(windowHeight / sizerHeight); imgWrapper.style.height = (imgWidth / ratio) + 'px' } else if (sizerHeight != windowHeight) { imgWrapper.style.height = (imgWidth / ratio) + 'px' } }
function t1072_init(recId) { var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t1072'); if (!container) return; t_onFuncLoad('t_card__addFocusOnTab', function () { t_card__addFocusOnTab(recId) }); if (document.fonts && document.fonts.ready) { document.fonts.ready.then(function () { t1072_equalHeight(rec) }) } else { setTimeout(function () { t1072_equalHeight(rec) }, 500) } }
function t1072_equalHeight(rec) { var rows = rec.querySelectorAll('.t1072__row'); Array.prototype.forEach.call(rows, function (row) { var titles = row.querySelectorAll('.t1072__title'); var texts = row.querySelectorAll('.t-card__descr'); var prices = row.querySelectorAll('.t1072__price'); var headers = row.querySelectorAll('.t1072__header'); if (titles.length > 0) t1072_equalHeightElems(titles); if (texts.length > 0) t1072_equalHeightElems(texts); if (prices.length > 0) t1072_equalHeightElems(prices); if (headers.length > 0) t1072_equalHeightElems(headers) }) }
function t1072_equalHeightElems(elements) {
    var maxHeight = 0; for (var i = 0; i < elements.length; i++) { elements[i].style.height = '' }
    for (var i = 0; i < elements.length; i++) { var element = elements[i]; var elementStyle = getComputedStyle(element, null); var elementPaddingTop = parseInt(elementStyle.paddingTop) || 0; var elementPaddingBottom = parseInt(elementStyle.paddingBottom) || 0; var elementHeight = element.clientHeight - (elementPaddingTop + elementPaddingBottom); if (elementHeight > maxHeight) maxHeight = elementHeight }
    if (window.innerWidth >= 960) { for (var i = 0; i < elements.length; i++) { elements[i].style.height = maxHeight + 'px' } } else { for (var i = 0; i < elements.length; i++) { elements[i].style.height = '' } }
}
function t958_init(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var container = rec.querySelector('.t958'); if (!container) return; var sliderContainer = rec.querySelector('.t958__slidecontainer'); var items = rec.querySelectorAll('.t958__item'); var cards = rec.querySelectorAll('.t958__card'); var totalSlides = items.length; if (!totalSlides) { return }
    var sliderWidth = parseFloat(getComputedStyle(items[0], null).width.replace('px', '')); t958_checkSize(rec); sliderContainer.style.width = (sliderWidth * totalSlides) + 'px'; window.addEventListener('resize', t_throttle(function () { t958_findVisibleCards(rec); t958_initPopup(rec); t958_checkSize(rec); sliderWidth = parseFloat(getComputedStyle(items[0], null).width.replace('px', '')); sliderContainer.style.width = (sliderWidth * totalSlides) + 'px'; var matrix = (getComputedStyle(sliderContainer, null).transform || '').replace(/[^0-9\-.,]/g, '').split(','); var x = matrix[12] || matrix[4]; if (-((totalSlides - 1) * sliderWidth) > x) { sliderContainer.style.transform = 'translate(-' + (totalSlides - 1) * sliderWidth + 'px, 0)' } })); if (typeof jQuery !== 'undefined') { $(container).bind('displayChanged', function () { sliderContainer.style.width = '100%'; setTimeout(function () { sliderWidth = parseFloat(getComputedStyle(items[0], null).width.replace('px', '')); sliderContainer.style.width = (sliderWidth * totalSlides) + 'px'; t958_checkSize(rec); t958_findVisibleCards(rec); t958_initPopup(rec) }, 300) }) } else { container.addEventListener('displayChanged', function () { sliderContainer.style.width = '100%'; setTimeout(function () { sliderWidth = parseFloat(getComputedStyle(items[0], null).width.replace('px', '')); sliderContainer.style.width = (sliderWidth * totalSlides) + 'px'; t958_checkSize(rec); t958_findVisibleCards(rec); t958_initPopup(rec) }, 300) }) }
    rec.querySelector('.t958__next').addEventListener('click', function () { t958_slide(rec, 'right') }); rec.querySelector('.t958__previous').addEventListener('click', function () { t958_slide(rec, 'left') }); if (window.innerWidth > 640) { t958_findVisibleCards(rec) } else { t_onFuncLoad('Hammer', function () { t958_initSliderSwipe(rec) }); for (var i = 0; i < cards.length; i++) { cards[i].classList.add('t958__card-visible') } }
    t958_initPopup(rec); var isiOS = /iPhone|iPad|iPod/i.test(navigator.userAgent) || (navigator.userAgent.indexOf('Macintosh') && 'ontouchend' in document); if (isiOS) { var activeIndex; var activeSlide; if (document.readyState === 'complete') { activeIndex = container.getAttribute('data-slide-pos'); if (activeIndex) activeIndex = parseInt(activeIndex, 10); activeSlide = typeof activeIndex === 'number' ? items[activeIndex] : null; if (activeSlide) t958__hideMobileSlides(activeSlide) } else { window.addEventListener('load', function () { activeIndex = container.getAttribute('data-slide-pos'); if (activeIndex) activeIndex = parseInt(activeIndex, 10); activeSlide = typeof activeIndex === 'number' ? items[activeIndex] : null; activeSlide = items[activeIndex]; if (activeSlide) t958__hideMobileSlides(activeSlide) }) } }
}
function t958_checkSize(rec) {
    var cards = rec.querySelectorAll('.t958__card_preview'); var mores = rec.querySelectorAll('.t958__more-wrapper'); var blockHeight = rec.querySelector('.t958__height'); var maxWidth = parseFloat(getComputedStyle(blockHeight, null).width.replace('px', '')); var windowMargin = 80; var windowWidth = window.innerWidth; var cardMaxWidth = windowWidth - windowMargin; if (maxWidth > windowWidth) {
        for (var i = 0; i < cards.length; i++) { cards[i].style.maxWidth = cardMaxWidth + 'px' }
        for (var i = 0; i < mores.length; i++) { mores[i].style.maxWidth = cardMaxWidth + 'px' }
    } else {
        for (var i = 0; i < cards.length; i++) { cards[i].style.maxWidth = '' }
        for (var i = 0; i < mores.length; i++) { mores[i].style.maxWidth = '' }
    }
    for (var i = 0; i < cards.length; i++) { var card = cards[i]; var cardStyle = getComputedStyle(card, null); var cardPaddingTop = parseInt(cardStyle.paddingTop) || 0; var cardPaddingBottom = parseInt(cardStyle.paddingBottom) || 0; var cardHeight = card.clientHeight - (cardPaddingTop + cardPaddingBottom); var cardInner = card.querySelector('.t958__card-inner'); var cardInnerHeight = cardInner.offsetHeight; if (cardHeight <= cardInnerHeight) { card.classList.add('t958__card_fade') } else { card.classList.remove('t958__card_fade') } }
}
function t958_initSliderSwipe(rec) { var sliderWrapper = rec.querySelector('.t958__gallery'); var totalSlides = rec.querySelectorAll('.t958__item').length; var timeout; var isScrolling = !1; if (typeof Hammer !== 'undefined') { delete Hammer.defaults.cssProps.userSelect; var hammer = new Hammer(sliderWrapper, { domEvents: !0, inputClass: Hammer.TouchInput, recognizers: [[Hammer.Swipe, { direction: Hammer.DIRECTION_HORIZONTAL }]] }); window.addEventListener('scroll', function () { isScrolling = !0; clearTimeout(timeout); timeout = setTimeout(function () { isScrolling = !1 }, 250) }); if (totalSlides == 1) return !1; hammer.on('swipeleft', function (event) { if (isScrolling) return !1; sliderWrapper.setAttribute('data-slider-touch', 'yes'); if (event.isFinal) { t958_slide(rec, 'right'); sliderWrapper.setAttribute('data-slider-touch', '') } }); hammer.on('swiperight', function (event) { if (isScrolling) return !1; sliderWrapper.setAttribute('data-slider-touch', 'yes'); if (event.isFinal) { t958_slide(rec, 'left'); sliderWrapper.setAttribute('data-slider-touch', '') } }) } }
function t958_slide(rec, direction) {
    var allrecords = document.getElementById('allrecords'); var container = rec.querySelector('.t958__slidecontainer'); var items = rec.querySelectorAll('.t958__item'); var totalSlides = items.length; var sliderWidth = parseFloat(getComputedStyle(items[0], null).width.replace('px', '')); var position = parseInt(container.getAttribute('data-slide-pos'), 10); var isiOS = /iPhone|iPad|iPod/i.test(navigator.userAgent) || (navigator.userAgent.indexOf('Macintosh') && 'ontouchend' in document); if (direction === 'right') { container.setAttribute('data-slide-pos', ++position); if (position >= totalSlides) { position = 0; container.setAttribute('data-slide-pos', position) } } else { container.setAttribute('data-slide-pos', --position); if (position <= -1) { position = totalSlides - 1; container.setAttribute('data-slide-pos', position) } }
    container.style.transform = 'translate(-' + sliderWidth * position + 'px, 0)'; container.style.transitionDuration = '.3s'; setTimeout(function () { t958_findVisibleCards(rec); if (isiOS) { var activeIndex = container.getAttribute('data-slide-pos'); if (activeIndex) activeIndex = parseInt(activeIndex, 10); var activeSlide = typeof activeIndex === 'number' ? items[activeIndex] : null; if (activeSlide) t958__hideMobileSlides(activeSlide) } }, 350); if (window.lazy === 'y' || allrecords.getAttribute('data-tilda-lazy') === 'yes') { t_onFuncLoad('t_lazyload_update', function () { t_lazyload_update() }) }
}
function t958_findVisibleCards(rec) {
    var cards = rec.querySelectorAll('.t958__card'); var prevControl = rec.querySelector('.t958__previous'); var nextControl = rec.querySelector('.t958__next'); for (var i = 0; i < cards.length; i++) { var card = cards[i]; card.classList.remove('t958__card-left'); card.classList.remove('t958__card-right'); card.classList.remove('t958__card-visible'); var windowWidth = window.innerWidth; var cardLeftPos = card.getBoundingClientRect().left; var cardRightPos = cardLeftPos + parseFloat(getComputedStyle(card, null).width.replace('px', '')); if (cardLeftPos <= 0 && cardRightPos >= 0) { card.classList.add('t958__card-left') } else if (cardLeftPos <= windowWidth && cardRightPos >= windowWidth) { card.classList.add('t958__card-right') } else if (cardLeftPos >= 0 && cardRightPos <= windowWidth) { card.classList.add('t958__card-visible') } }
    var leftCard = rec.querySelector('.t958__card-left'); var rightCard = rec.querySelector('.t958__card-right'); if (leftCard) { var leftCardRect = leftCard.getBoundingClientRect().left; var leftCardWidth = parseFloat(getComputedStyle(leftCard, null).width.replace('px', '')); var leftCardOffset = leftCardWidth - Math.abs(leftCardRect); if (leftCardOffset >= 30) { prevControl.style.width = leftCardOffset + 'px' } else { prevControl.style.width = 100 + 'px' } }
    if (rightCard) { var rightCardRect = rightCard.getBoundingClientRect().left; var rightCardStyle = getComputedStyle(rightCard, null); var paddingLeft = parseInt(rightCardStyle.paddingLeft) || 0; var paddingRight = parseInt(rightCardStyle.paddingRight) || 0; var rightCardWidth = rightCard.clientWidth - (paddingLeft + paddingRight); var rightCardOffset = rightCardWidth - (rightCardRect + rightCardWidth - window.innerWidth); if (rightCardOffset >= 30) { nextControl.style.width = rightCardOffset + 'px' } else { nextControl.style.width = 100 + 'px' } }
}
function t958_initPopup(rec) {
    if (rec.querySelector('.t958').classList.contains('t958_preview')) return; var fadeCards = rec.querySelectorAll('.t958__card_fade[data-review-block^="review"]'); for (var i = 0; i < fadeCards.length; i++) {
        fadeCards[i].addEventListener('click', function () {
            var card = this; if (card.classList.contains('t958__card-visible')) {
                t958_showPopup(rec); var popup = rec.querySelector('.t-popup'); var reviewId = card.getAttribute('data-review-block').replace('review', ''); var reviewPopup = popup.querySelector('.t958__popup-item[data-review-index="' + reviewId + '"]'); var popupItems = popup.querySelectorAll('.t958__popup-item'); for (var i = 0; i < popupItems.length; i++) { popupItems[i].style.display = 'none' }
                reviewPopup.style.display = 'block'
            }
        })
    }
}
function t958_checkPopupSize(rec) { var popupContainer = rec.querySelector('.t-popup__container'); var popupHeight = parseFloat(getComputedStyle(popupContainer, null).height.replace('px', '')); var windowMargin = 120; var windowHeight = window.innerHeight - windowMargin; if (popupHeight > windowHeight) { popupContainer.classList.add('t-popup__container-static') } else { popupContainer.classList.remove('t-popup__container-static') } }
function t958_showPopup(rec) { var allrecords = document.getElementById('allrecords'); var popup = rec.querySelector('.t-popup'); var popupContainer = rec.querySelector('.t-popup__container'); var popupClose = rec.querySelector('.t-popup__close'); popup.style.display = 'block'; setTimeout(function () { popupContainer.classList.add('t-popup__container-animated'); popup.classList.add('t-popup_show'); t958_checkPopupSize(rec); if (window.lazy === 'y' || allrecords.getAttribute('data-tilda-lazy') === 'yes') { t_onFuncLoad('t_lazyload_update', function () { t_lazyload_update() }) } }, 50); if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupShowed'); document.body.classList.add('t-body_popupshowed'); popup.removeEventListener('mousedown', t958_mousedownEvent); popup.addEventListener('mousedown', t958_mousedownEvent); popupClose.removeEventListener('click', t958_closePopup); popupClose.addEventListener('click', t958_closePopup); document.removeEventListener('keydown', t958_keydownEvent); document.addEventListener('keydown', t958_keydownEvent) }
function t958_mousedownEvent(event) { var windowWidth = window.innerWidth; var maxScrollBarWidth = 17; var windowWithoutScrollBar = windowWidth - maxScrollBarWidth; if (event.clientX > windowWithoutScrollBar) return; if (event.target == this) t958_closePopup() }
function t958_keydownEvent(event) { if (event.keyCode == 27) t958_closePopup() }
function t958_closePopup() { var popupShow = document.querySelector('.t-popup.t-popup_show'); if (popupShow) { if (typeof t_triggerEvent === 'function') t_triggerEvent(document.body, 'popupHidden'); document.body.classList.remove('t-body_popupshowed'); popupShow.classList.remove('t-popup_show'); setTimeout(function () { var popups = document.querySelectorAll('.t-popup:not(.t-popup_show)'); document.body.scrollTop = 0; for (var i = 0; i < popups.length; i++) { popups[i].style.display = 'none' } }, 300) } }
function t958__hideMobileSlides(activeSlide) {
    if (!activeSlide) return; var slideWrapper = activeSlide.closest('.t958__slidecontainer'); var slides = Array.prototype.slice.call(slideWrapper.querySelectorAll('.t-slds__item:not(.t-slds__item_dummy):not([aria-hidden="true"])')); var slideWidth = getComputedStyle(activeSlide).width; var maxSlidesViewed = document.documentElement.clientWidth > 960 ? 5 : 3; if (slides.length <= maxSlidesViewed * 2) return; var activeSlideIndex = activeSlide.getAttribute('data-slide-index'); activeSlideIndex = parseInt(activeSlideIndex, 10); var activeIndexList = [activeSlideIndex]; for (var i = 1; i < maxSlidesViewed; i++) {
        if (activeSlideIndex + i <= slides.length) { activeIndexList.push(activeSlideIndex + i) } else { activeIndexList.push(i) }
        if (activeSlideIndex - i > 0) { activeIndexList.push(activeSlideIndex - i) } else { activeIndexList.push(slides.length + 1 - i) }
    }
    var innactiveClass = 't-slds__item-innactive'; slides.forEach(function (slide) { var isActiveIndexSlide = activeIndexList.some(function (index) { return parseInt(slide.getAttribute('data-slide-index'), 10) === index }); isActiveIndexSlide ? slide.classList.remove(innactiveClass) : slide.classList.add(innactiveClass); slide.style.width = slideWidth && !isActiveIndexSlide ? slideWidth : '' })
}
function t585_init(recId) {
    var rec = document.getElementById('rec' + recId); if (!rec) return; var accordion = rec.querySelectorAll('.t585__accordion')[0]; var headers = rec.querySelectorAll('.t585__header'); var isLazy = document.getElementById('allrecords').getAttribute('data-tilda-lazy'); var accordionScroll; if (accordion) { accordionScroll = accordion.getAttribute('data-scroll-to-expanded'); accordion = accordion.getAttribute('data-accordion') } else { accordion = 'false'; accordionScroll = 'false' }
    for (var i = 0; i < headers.length; i++) {
        headers[i].addEventListener('click', function () {
            var element = this; var container = element.nextElementSibling; var triggerButton = element.querySelector('.t585__trigger-button'); var activeHeight = 0; var isAccordionDown = !1; if (triggerButton) { var isExpanded = triggerButton.getAttribute('aria-expanded') === 'true'; triggerButton.setAttribute('aria-expanded', !isExpanded); container.hidden = isExpanded }
            if (element.classList.contains('t585__opened')) { element.classList.remove('t585__opened'); t585_accordionHide(container) } else {
                if (accordionScroll === 'true' && accordion === 'true') { activeHeight = t585__getOldAction(rec); isAccordionDown = t585__getAccordionPosition(headers, element) }
                if (accordion === 'true') t585_accordionAllHide(headers); element.classList.add('t585__opened'); container.style.display = 'block'; var height = container.scrollHeight; container.style.maxHeight = '0px'; setTimeout(function () { container.style.maxHeight = height + 'px'; if (accordionScroll === 'true') { t585__calcHeight(element, container, activeHeight, isAccordionDown) } }, 0)
            }
            if (window.lazy === 'y' || isLazy === 'yes') { t_onFuncLoad('t_lazyload_update', function () { t_lazyload_update() }) }
        })
    }
}
function t585_accordionAllHide(headers) { for (var i = 0; i < headers.length; i++) { var elementHide = headers[i]; elementHide.classList.remove('t585__opened'); t585_accordionHide(elementHide.nextElementSibling) } }
function t585_accordionHide(container) { if (!container.style.maxHeight) container.style.maxHeight = container.scrollHeight + 'px'; setTimeout(function () { container.style.maxHeight = '0px' }, 0) }
function t585__getOldAction(rec) { var activeHeader = rec.querySelector('.t585__opened'); var activeHeight = 0; if (activeHeader) var activeContainer = activeHeader.nextElementSibling; if (activeContainer) activeHeight = activeContainer.offsetHeight; return activeHeight }
function t585__getAccordionPosition(headers, element) {
    var oldIndex; var newIndex; for (var i = 0; i < headers.length; i++) { var header = headers[i]; if (header.classList.contains('t585__opened')) oldIndex = i; if (header === element) newIndex = i }
    return oldIndex < newIndex ? !0 : !1
}
function t585__calcHeight(element, container, activeHeight, isAccordionDown) { var windowHeight = window.innerHeight; var windowScroll = window.scrollY; var containerHeight = container.scrollHeight; var accordionHeight = containerHeight + element.offsetHeight; var elementTopOffset = element.getBoundingClientRect().top + windowScroll; var target = isAccordionDown ? elementTopOffset - activeHeight : elementTopOffset; var accordionBottomLine = target + accordionHeight; var windowBottomLine = windowScroll + windowHeight; if (target < windowScroll || accordionHeight > windowHeight || accordionBottomLine > windowBottomLine) { t585__scroll(target) } }
function t585__scroll(target) {
    var duration = 400; var start = (window.pageYOffset || document.documentElement.scrollTop) - (document.documentElement.clientTop || 0); var change = target - start; var currentTime = 0; var increment = 16; document.body.setAttribute('data-scrollable', 'true'); function t585__easeInOutCubic(currentTime) { if ((currentTime /= duration / 2) < 1) { return change / 2 * currentTime * currentTime * currentTime + start } else { return change / 2 * ((currentTime -= 2) * currentTime * currentTime + 2) + start } }
    function t585__animateScroll() { currentTime += increment; window.scrollTo(0, t585__easeInOutCubic(currentTime)); if (currentTime < duration) { setTimeout(t585__animateScroll, increment) } else { document.body.removeAttribute('data-scrollable') } }
    t585__animateScroll()
}
function t389_scrollToTop() { var duration = 700; var difference = window.pageYOffset; var step = 10 * difference / duration; var timer = setInterval(function () { difference -= step; window.scrollTo(0, difference); document.body.setAttribute('data-scrollable', 'true'); if (window.pageYOffset === 0) { document.body.removeAttribute('data-scrollable'); clearInterval(timer) } }, 10) }
window.requestAnimationFrame = (function () { return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) { window.setTimeout(callback, 1000 / 60) } })(); function t270_scroll(hash, offset) {
    if (!hash) return; t270_checkLoad(hash, offset); if (hash.indexOf('#!/tproduct/') !== -1 || hash.indexOf('#!/tab/') !== -1) { return !0 }
    var isHistoryChangeAllowed = window.location.hash !== hash; var wrapperBlock = document.querySelector('.t270'); var dontChangeHistory = wrapperBlock ? Boolean(wrapperBlock.getAttribute('data-history-disabled')) : !1; t270_scrollToEl(hash, offset); if (!dontChangeHistory && isHistoryChangeAllowed) {
        if (history.pushState) { history.pushState(null, null, hash) } else { window.location.hash = hash }
        isHistoryChangeAllowed = !1
    }
    return !0
}
function t270_checkLoad(hash, offset) { if (window.t270_loadChecked) return; var sliderWrappers = document.body.querySelectorAll('.t-slds__items-wrapper'); if (!sliderWrappers.length) return; var lastWrapper = sliderWrappers[sliderWrappers.length - 1]; var sliderImgs = lastWrapper ? lastWrapper.querySelectorAll('.t-slds__bgimg') : []; var lastImg = sliderImgs[sliderImgs.length - 1]; var imageUrl = lastImg ? window.getComputedStyle(lastImg).backgroundImage : ''; imageUrl = imageUrl.substring(5, imageUrl.length - 2); var preloaderImg = document.createElement('img'); preloaderImg.src = imageUrl ? imageUrl : ''; preloaderImg.addEventListener('load', function () { t270_scroll(hash, offset); window.t270_loadChecked = !0 }) }
function t270_scrollToEl(hash, offset) {
    if (document.body.getAttribute('data-scroll')) return; var scrollTargetY = t270_getTarget(hash, offset); if (isNaN(scrollTargetY)) return; var body = document.body; var canSmoothScroll = window.CSS && window.CSS.supports('scroll-behavior', 'smooth'); if (window.isMobile && canSmoothScroll && 'scrollBehavior' in document.documentElement.style) { body.setAttribute('data-scroll', 'true'); window.scrollTo({ left: 0, top: scrollTargetY, behavior: 'smooth' }); setTimeout(function () { body.removeAttribute('data-scroll') }, 500) } else {
        var html = document.querySelector('html'); var documentHeight = Math.max(body.scrollHeight, body.offsetHeight, body.clientHeight, html.offsetHeight); var scrollY = window.scrollY || document.documentElement.scrollTop; var speed = 2000; var time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8)); var currentTime = 0; function t270_easeInQuad(pos) { return Math.pow(pos, 2) }
        function t270_animationScroll() {
            currentTime += 1 / 60; var newDocumentHeight = Math.max(body.scrollHeight, body.offsetHeight, body.clientHeight, html.offsetHeight); if (documentHeight < newDocumentHeight) { documentHeight = newDocumentHeight; scrollTargetY = t270_getTarget(hash, offset); scrollY = window.scrollY || document.documentElement.scrollTop; time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8)) }
            var difference = currentTime / time; var animation = t270_easeInQuad(difference); if (difference < 1) { requestAnimationFrame(t270_animationScroll); window.scrollTo(0, scrollY + ((scrollTargetY - scrollY) * animation)) } else { body.removeAttribute('data-scroll'); body.removeAttribute('data-scrollable'); window.scrollTo(0, scrollTargetY) }
        }
        body.setAttribute('data-scroll', 'true'); body.setAttribute('data-scrollable', 'true'); t270_animationScroll()
    }
}
function t270_getTarget(hash, offset) {
    var target; try { if (hash.substring(0, 1) === '#') { target = document.getElementById(hash.substring(1)) } else { target = document.querySelector(hash) } } catch (event) { console.log('Exception t270: ' + event.message); return }
    if (!target) { target = document.querySelector('a[name="' + hash.substr(1) + '"]'); if (!target) return }
    target = parseInt((target.getBoundingClientRect().top + window.pageYOffset) - offset, 10); target = Math.max(target, 0); return target
}